'use strict';var _assign=require('babel-runtime/core-js/object/assign'),_assign2=_interopRequireDefault(_assign),_keys=require('babel-runtime/core-js/object/keys'),_keys2=_interopRequireDefault(_keys);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{'default':obj}}// import override from './override'
var PLUGIN_NAME='VueNotifications',PACKAGE_NAME='vue-notifications',PROPERTY_NAME='notifications',TYPE={error:'error',warn:'warn',info:'info',success:'success'},VUE_VERSION={evangelion:1,ghostInTheShell:2},MESSAGES={alreadyInstalled:PLUGIN_NAME+': plugin already installed',methodNameConflict:PLUGIN_NAME+': names conflict - '};/**
 * @param  {Object} Vue
 * @return {Object}
 */function getVersion(a){var b=a.version.match(/(\d+)/g);return{major:+b[0],regular:+b[1],minor:+b[2]}}/**
 * @param  {String} type
 * @param  {String} message
 * @param  {String} title
 * @param  {String} debugMsg
 * @return  {String}
 */function showDefaultMessage(_ref){var a=_ref.type,b=_ref.message,c=_ref.title,d=_ref.debugMsg,e='Title: '+c+', Message: '+b+', DebugMsg: '+d+', type: '+a;return a===TYPE.error?console.error(e):a===TYPE.warn?console.warn(e):a===TYPE.success?console.info(e):console.log(e),e}/**
 * @param  {Object} config
 * @param  {Object} options
 */function showMessage(a,b){var c=b&&b[a.type]?b[a.type]:showDefaultMessage;if(c(a),a.cb)return a.cb()}/**
 * @param {Object} targetObj
 * @param {Object} typesObj
 * @param {Object} options
 * @return {undefined}
 * */function addProtoMethods(a,b,c){(0,_keys2['default'])(b).forEach(function(d){a[b[d]]=function(e){return e.type=b[d],showMessage(e,c)}})}/**
 * @param  {String} name
 * @param  {Object} options
 * @param  {Object} pluginOptions
 */function setMethod(a,b,c){b.methods[a]?console.error(MESSAGES.methodNameConflict+a):b.methods[a]=makeMethod(a,b,c)}/**
 * @param  {String} configName
 * @param  {Object} options
 * @param  {Object} pluginOptions
 * @return {Function}
 */function makeMethod(a,b,c){return function(d){var e={};return(0,_assign2['default'])(e,VueNotifications.config),(0,_assign2['default'])(e,b[VueNotifications.propertyName][a]),(0,_assign2['default'])(e,d),showMessage(e,c)}}/**
 * @param  {Object} notifications
 * @param  {Object} pluginOptions
 */function initVueNotificationPlugin(a,b){var _this=this;a&&((0,_keys2['default'])(a).forEach(function(c){setMethod(c,_this.$options,b)}),this.$emit(PACKAGE_NAME+'-initiated'))}var VueNotifications={type:TYPE,propertyName:PROPERTY_NAME,config:{type:TYPE.info,timeout:3000},installed:!1,/**
   * Plugin | vue-notifications
   * @param  {Function} Vue
   * @param  {Object} pluginOptions
   * @this VueNotifications
   */install:function install(a){var b=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},c={},d=void 0;if(override(a,this.propertyName),this.installed)throw console.error(MESSAGES.alreadyInstalled);getVersion(a).major===VUE_VERSION.evangelion&&(d='init'),getVersion(a).major===VUE_VERSION.ghostInTheShell&&(d='beforeCreate'),c[d]=function(){initVueNotificationPlugin.call(this,this.$options[VueNotifications.propertyName],b)},a.mixin(c),addProtoMethods(this,this.type,b),this.installed=!0}};'undefined'!=typeof window&&window.Vue&&window.Vue.use(VueNotifications);// export default VueNotifications
function override(a,b){function c(){if(this[b])throw console.error('Override: property "'+b+'" is already defined');this[b]={};var f=this.$options,g=f[b];g?this[b]=g:f.parent&&f.parent[b]&&(this[b]=f.parent[b])}var d=a.prototype._init,e=a.prototype._destroy;a.prototype._init=function(){var f=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};f.init=f.init?[c].concat(f.init):c,d.call(this,f)},a.prototype._destroy=function(){this[b]&&(this[b]=void 0,delete this[b]),e.apply(this,arguments)}}