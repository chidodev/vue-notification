{"version":3,"sources":["vue-notifications.es5.js"],"names":["root","factory","define","amd","exports","module","VueNotifications","this","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","makeMixin","Vue","pluginOptions","_ref2","hooks","init","destroy","mounted","innerMethods","getMajorVersion","VUE_VERSION","eva","ghost","vueApp","vueAppOptions","$options","notificationsField","propertyName","initVueNotificationPlugin","unlinkVueNotificationPlugin","TYPE","error","warn","info","success","MESSAGES","alreadyInstalled","PLUGIN_NAME","methodNameConflict","version","match","showInConsole","msg","type","types","console","log","showDefaultMessage","_ref","message","title","debugMsg","addClass","elem","className","classList","add","removeClass","remove","replace","RegExp","split","join","hasClass","contains","test","getValues","config","result","keepFnFields","keys","forEach","field","fnField","bind","call","showMessage","options","valuesObj","cb","addMethods","targetObj","typesObj","v","setMethod","name","methods","makeMethod","configName","newConfig","assign","notifications","$emit","PACKAGE_NAME","attachedMethods","undefined","timeout","installed","install","arguments","length","mixin","window","use"],"mappings":"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","file":"vue-notifications.es5.min.js","sourcesContent":[";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.VueNotifications = factory();\n  }\n}(this, function() {\n'use strict';\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar PLUGIN_NAME = 'VueNotifications';\nvar PACKAGE_NAME = 'vue-notifications';\nvar PROPERTY_NAME = 'notifications';\n\nvar TYPE = {\n  error: 'error',\n  warn: 'warn',\n  info: 'info',\n  success: 'success'\n};\n\nvar VUE_VERSION = {\n  eva: 1,\n  ghost: 2\n};\n\nvar MESSAGES = {\n  alreadyInstalled: PLUGIN_NAME + ': plugin already installed',\n  methodNameConflict: PLUGIN_NAME + ': names conflict - '\n};\n\nvar innerMethods = {\n  /**\n   * @param  {Object} Vue\n   * @return {Object}\n   */\n  getMajorVersion: function getMajorVersion(Vue) {\n    var version = Vue.version.match(/(\\d+)/g);\n    return +version[0];\n  },\n\n\n  /**\n   * @param  {String} msg\n   * @param  {String} type\n   * @param  {Object} types\n   */\n  showInConsole: function showInConsole(msg, type, types) {\n    if (type === types.error) console.error(msg);else if (type === types.warn) console.warn(msg);else if (type === types.success) console.info(msg);else console.log(msg);\n  },\n\n\n  /**\n   * @param  {String} type\n   * @param  {String} message\n   * @param  {String} title\n   * @param  {String} debugMsg\n   * @return  {String}\n   */\n  showDefaultMessage: function showDefaultMessage(_ref) {\n    var type = _ref.type,\n        message = _ref.message,\n        title = _ref.title,\n        debugMsg = _ref.debugMsg;\n\n    var msg = 'Title: ' + title + ', Message: ' + message + ', DebugMsg: ' + debugMsg + ', type: ' + type;\n\n    innerMethods.showInConsole(msg, type, TYPE);\n\n    return msg;\n  },\n\n  /**\n   * @param  {Object} elem\n   * @param  {String} className\n   */\n  addClass: function addClass(elem, className) {\n    if (elem.classList) {\n      elem.classList.add(className);\n    } else {\n      elem.className += ' ' + className;\n    }\n  },\n\n  /**\n   * @param  {Object} elem\n   * @param  {String} className\n   */\n  removeClass: function removeClass(elem, className) {\n    if (elem.classList) {\n      elem.classList.remove(className);\n    } else {\n      elem.className = elem.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n    }\n  },\n\n  /**\n   * @param  {Object} elem\n   * @param  {String} className\n   * @return {Boolean}\n   */\n  hasClass: function hasClass(elem, className) {\n    if (elem.classList) {\n      return elem.classList.contains(className);\n    } else {\n      return new RegExp('(^| )' + className + '( |$)', 'gi').test(elem.className);\n    }\n  },\n\n  /**\n   * @param  {Object} vueApp\n   * @param  {Object} config\n   * @return {Object}\n   */\n  getValues: function getValues(vueApp, config) {\n    var result = {};\n    var keepFnFields = ['cb'];\n\n    Object.keys(config).forEach(function (field) {\n      keepFnFields.forEach(function (fnField) {\n        if (field === fnField) {\n          result[field] = config[field].bind(vueApp);\n        } else {\n          result[field] = typeof config[field] === 'function' ? config[field].call(vueApp) : config[field];\n        }\n      });\n    });\n\n    return result;\n  },\n\n\n  /**\n   * @param  {Object} config\n   * @param  {Object} options\n   * @param  {Object} vueApp\n   */\n  showMessage: function showMessage(config, options, vueApp) {\n    var valuesObj = innerMethods.getValues(vueApp, config);\n    var isMethodOverridden = options && options[valuesObj.type];\n    var method = isMethodOverridden ? options[valuesObj.type] : innerMethods.showDefaultMessage;\n    method(valuesObj, vueApp);\n\n    if (config.cb) return config.cb();\n  },\n\n\n  /**\n   * @param {Object} targetObj\n   * @param {Object} typesObj\n   * @param {Object} options\n   * @return {undefined}\n   * */\n  addMethods: function addMethods(targetObj, typesObj, options) {\n    Object.keys(typesObj).forEach(function (v) {\n      targetObj[typesObj[v]] = function (config) {\n        config.type = typesObj[v];\n        // TODO (S.Panfilov)fix 'vueApp' in param\n        return innerMethods.showMessage(config, options);\n      };\n    });\n  },\n\n\n  /**\n   * @param  {Object} vueApp\n   * @param  {String} name\n   * @param  {Object} options\n   * @param  {Object} pluginOptions\n   */\n  setMethod: function setMethod(vueApp, name, options, pluginOptions) {\n    if (!options.methods) options.methods = {};\n\n    if (options.methods[name]) {\n      // TODO (S.Panfilov) not sure - throw error here or just warn\n      console.error(MESSAGES.methodNameConflict + name);\n    } else {\n      options.methods[name] = innerMethods.makeMethod(vueApp, name, options, pluginOptions);\n    }\n  },\n\n\n  /**\n   * @param  {Object} vueApp\n   * @param  {String} configName\n   * @param  {Object} options\n   * @param  {Object} pluginOptions\n   * @return {Function}\n   */\n  makeMethod: function makeMethod(vueApp, configName, options, pluginOptions) {\n    return function (config) {\n      var newConfig = {};\n      Object.assign(newConfig, VueNotifications.config);\n      Object.assign(newConfig, options[VueNotifications.propertyName][configName]);\n      Object.assign(newConfig, config);\n\n      return innerMethods.showMessage(newConfig, pluginOptions, vueApp);\n    };\n  },\n\n  /**\n   * @param  {Object} vueApp\n   * @param  {Object} notifications\n   * @param  {Object} pluginOptions\n   */\n  initVueNotificationPlugin: function initVueNotificationPlugin(vueApp, notifications, pluginOptions) {\n    if (!notifications) return;\n    Object.keys(notifications).forEach(function (name) {\n      innerMethods.setMethod(vueApp, name, vueApp.$options, pluginOptions);\n    });\n\n    vueApp.$emit(PACKAGE_NAME + '-initiated');\n  },\n\n  /**\n   * @param  {Object} vueApp\n   * @param  {Object} notifications\n   */\n  unlinkVueNotificationPlugin: function unlinkVueNotificationPlugin(vueApp, notifications) {\n    if (!notifications) return;\n    var attachedMethods = vueApp.$options.methods;\n    Object.keys(notifications).forEach(function (name) {\n      if (attachedMethods[name]) {\n        attachedMethods[name] = undefined;\n        delete attachedMethods[name];\n      }\n    });\n\n    vueApp.$emit(PACKAGE_NAME + '-unlinked');\n  }\n};\n\n/**\n * @param {Function} Vue\n * @param {Object} pluginOptions\n * @return {Object}\n */\nfunction makeMixin(Vue, pluginOptions) {\n  var _ref2;\n\n  var hooks = {\n    init: '',\n    destroy: 'beforeDestroy',\n    mounted: ''\n  };\n\n  if (innerMethods.getMajorVersion(Vue) === VUE_VERSION.eva) {\n    hooks.init = 'init';\n    hooks.mounted = 'compiled';\n  }\n  if (innerMethods.getMajorVersion(Vue) === VUE_VERSION.ghost) {\n    hooks.init = 'beforeCreate';\n    hooks.mounted = 'mounted';\n  }\n\n  return _ref2 = {}, _defineProperty(_ref2, hooks.init, function () {\n    var vueApp = this;\n    var vueAppOptions = this.$options;\n    var notificationsField = vueAppOptions[VueNotifications.propertyName];\n\n    innerMethods.initVueNotificationPlugin(vueApp, notificationsField, pluginOptions);\n  }), _defineProperty(_ref2, hooks.destroy, function () {\n    var vueApp = this;\n    var vueAppOptions = this.$options;\n    var notificationsField = vueAppOptions[VueNotifications.propertyName];\n    innerMethods.unlinkVueNotificationPlugin(vueApp, notificationsField);\n  }), _ref2;\n}\n\nvar VueNotifications = {\n  type: TYPE,\n  propertyName: PROPERTY_NAME,\n  config: {\n    type: TYPE.info,\n    timeout: 3000\n  },\n  installed: false,\n  /**\n   * Plugin | vue-notifications\n   * @param  {Function} Vue\n   * @param  {Object} pluginOptions\n   * @this VueNotifications\n   */\n  install: function install(Vue) {\n    var pluginOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (this.installed) throw console.error(MESSAGES.alreadyInstalled);\n    var mixin = makeMixin(Vue, pluginOptions);\n    Vue.mixin(mixin);\n\n    innerMethods.addMethods(this, this.type, pluginOptions);\n\n    this.installed = true;\n  }\n\n  //TODO (S.Panfilov) add ability to access this.notifications.someError.message\n  //TODO (S.Panfilov) add \"noCall:true\" property\n\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(VueNotifications);\n}\nreturn VueNotifications;\n}));\n"]}