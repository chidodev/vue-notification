{"version":3,"sources":["vue-notifications.es5.js"],"names":["root","factory","define","amd","exports","module","VueNotifications","this","_interopRequireDefault","obj","__esModule","default","getVersion","Vue","version","match","major","regular","minor","showDefaultMessage","_ref","type","message","title","debugMsg","msg","TYPE","error","console","warn","success","info","log","showMessage","config","options","method","cb","addProtoMethods","targetObj","typesObj","_keys2","forEach","v","setMethod","name","pluginOptions","methods","MESSAGES","methodNameConflict","makeMethod","configName","newConfig","_assign2","propertyName","initVueNotificationPlugin","notifications","_this","$options","$emit","PACKAGE_NAME","override","key","customInit","keyOption","parent","_init","prototype","_destroy","arguments","length","undefined","init","concat","call","apply","_assign","require","_keys","PLUGIN_NAME","PROPERTY_NAME","VUE_VERSION","evangelion","ghostInTheShell","alreadyInstalled","timeout","installed","install","mixin","hook","window","use"],"mappings":"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","file":"vue-notifications.es5.min.js","sourcesContent":[";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.VueNotifications = factory();\n  }\n}(this, function() {\n'use strict';\n\nvar _assign = require('babel-runtime/core-js/object/assign');\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n// import override from './override'\nvar PLUGIN_NAME = 'VueNotifications';\nvar PACKAGE_NAME = 'vue-notifications';\nvar PROPERTY_NAME = 'notifications';\n\nvar TYPE = {\n  error: 'error',\n  warn: 'warn',\n  info: 'info',\n  success: 'success'\n};\n\nvar VUE_VERSION = {\n  evangelion: 1,\n  ghostInTheShell: 2\n};\n\nvar MESSAGES = {\n  alreadyInstalled: PLUGIN_NAME + ': plugin already installed',\n  methodNameConflict: PLUGIN_NAME + ': names conflict - '\n};\n\n/**\n * @param  {Object} Vue\n * @return {Object}\n */\nfunction getVersion(Vue) {\n  var version = Vue.version.match(/(\\d+)/g);\n  return {\n    major: +version[0],\n    regular: +version[1],\n    minor: +version[2]\n  };\n}\n\n/**\n * @param  {String} type\n * @param  {String} message\n * @param  {String} title\n * @param  {String} debugMsg\n * @return  {String}\n */\nfunction showDefaultMessage(_ref) {\n  var type = _ref.type;\n  var message = _ref.message;\n  var title = _ref.title;\n  var debugMsg = _ref.debugMsg;\n\n  var msg = 'Title: ' + title + ', Message: ' + message + ', DebugMsg: ' + debugMsg + ', type: ' + type;\n\n  if (type === TYPE.error) console.error(msg);else if (type === TYPE.warn) console.warn(msg);else if (type === TYPE.success) console.info(msg);else console.log(msg);\n\n  return msg;\n}\n\n/**\n * @param  {Object} config\n * @param  {Object} options\n */\nfunction showMessage(config, options) {\n  var method = options && options[config.type] ? options[config.type] : showDefaultMessage;\n  method(config);\n\n  if (config.cb) return config.cb();\n}\n\n/**\n * @param {Object} targetObj\n * @param {Object} typesObj\n * @param {Object} options\n * @return {undefined}\n * */\nfunction addProtoMethods(targetObj, typesObj, options) {\n  (0, _keys2['default'])(typesObj).forEach(function (v) {\n    targetObj[typesObj[v]] = function (config) {\n      config.type = typesObj[v];\n      return showMessage(config, options);\n    };\n  });\n}\n\n/**\n * @param  {String} name\n * @param  {Object} options\n * @param  {Object} pluginOptions\n */\nfunction setMethod(name, options, pluginOptions) {\n  // TODO (S.Panfilov) not sure - throw error here or just warn\n  // if (options.methods[name]) throw console.error(MESSAGES.methodNameConflict + name)\n  if (options.methods[name]) {\n    console.error(MESSAGES.methodNameConflict + name);\n  } else {\n    options.methods[name] = makeMethod(name, options, pluginOptions);\n  }\n}\n\n/**\n * @param  {String} configName\n * @param  {Object} options\n * @param  {Object} pluginOptions\n * @return {Function}\n */\nfunction makeMethod(configName, options, pluginOptions) {\n  return function (config) {\n    var newConfig = {};\n    (0, _assign2['default'])(newConfig, VueNotifications.config);\n    (0, _assign2['default'])(newConfig, options[VueNotifications.propertyName][configName]);\n    (0, _assign2['default'])(newConfig, config);\n\n    return showMessage(newConfig, pluginOptions);\n  };\n}\n\n/**\n * @param  {Object} notifications\n * @param  {Object} pluginOptions\n */\nfunction initVueNotificationPlugin(notifications, pluginOptions) {\n  var _this = this;\n\n  if (!notifications) return;\n  (0, _keys2['default'])(notifications).forEach(function (name) {\n    setMethod(name, _this.$options, pluginOptions);\n  });\n\n  this.$emit(PACKAGE_NAME + '-initiated');\n}\n\nvar VueNotifications = {\n  type: TYPE,\n  propertyName: PROPERTY_NAME,\n  config: {\n    type: TYPE.info,\n    timeout: 3000\n  },\n  installed: false,\n  /**\n   * Plugin | vue-notifications\n   * @param  {Function} Vue\n   * @param  {Object} pluginOptions\n   * @this VueNotifications\n   */\n  install: function install(Vue) {\n    var pluginOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var mixin = {};\n    var hook = void 0;\n\n    override(Vue, this.propertyName);\n\n    if (this.installed) throw console.error(MESSAGES.alreadyInstalled);\n    if (getVersion(Vue).major === VUE_VERSION.evangelion) hook = 'init';\n    if (getVersion(Vue).major === VUE_VERSION.ghostInTheShell) hook = 'beforeCreate';\n\n    mixin[hook] = function () {\n      initVueNotificationPlugin.call(this, this.$options[VueNotifications.propertyName], pluginOptions);\n    };\n\n    Vue.mixin(mixin);\n    addProtoMethods(this, this.type, pluginOptions);\n\n    this.installed = true;\n  }\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(VueNotifications);\n}\n\n// export default VueNotifications\nfunction override(Vue, key) {\n  var _init = Vue.prototype._init;\n  var _destroy = Vue.prototype._destroy;\n\n  Vue.prototype._init = function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    options.init = options.init ? [customInit].concat(options.init) : customInit;\n    _init.call(this, options);\n  };\n\n  Vue.prototype._destroy = function () {\n    if (this[key]) {\n      this[key] = undefined;\n      delete this[key];\n    }\n\n    _destroy.apply(this, arguments);\n  };\n\n  function customInit() {\n    if (this[key]) throw console.error('Override: property \"' + key + '\" is already defined');\n    this[key] = {};\n\n    var options = this.$options;\n    var keyOption = options[key];\n\n    if (keyOption) {\n      this[key] = keyOption;\n    } else if (options.parent && options.parent[key]) {\n      this[key] = options.parent[key];\n    }\n  }\n}\nreturn VueNotifications;\n}));\n"],"sourceRoot":"/source/"}