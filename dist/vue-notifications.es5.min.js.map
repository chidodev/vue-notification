{"version":3,"sources":["vue-notifications.es5.js"],"names":["root","factory","define","amd","exports","module","VueNotifications","this","PLUGIN_NAME","PACKAGE_NAME","PROPERTY_NAME","TYPE","error","warn","info","success","VUE_VERSION","evangelion","ghostInTheShell","MESSAGES","alreadyInstalled","methodNameConflict","innerMethods","getVersion","Vue","version","match","major","regular","minor","showInConsole","msg","type","types","console","log","showDefaultMessage","_ref","vueApp","message","title","debugMsg","addClass","elem","className","classList","add","removeClass","remove","replace","RegExp","split","join","hasClass","contains","test","showInlineFn","_ref2","inClass","outClass","innerText","clearInlineFn","_ref3","showInlineMessage","_ref4","id","timeout","_ref4$classes","classes","undefined","watch","cb","document","getElementById","setTimeout","call","interval","setInterval","clearInterval","getValues","config","result","keepFnFields","Object","keys","forEach","field","fnField","bind","showMessage","options","valuesObj","isLinkedToElem","isMethodOverridden","method","addMethods","targetObj","typesObj","v","setMethod","name","pluginOptions","methods","makeMethod","configName","newConfig","assign","propertyName","initVueNotificationPlugin","notifications","$options","$emit","installed","install","arguments","length","mixin","hook","vueAppOptions","notificationsField","window","use"],"mappings":"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","file":"vue-notifications.es5.min.js","sourcesContent":[";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.VueNotifications = factory();\n  }\n}(this, function() {\n'use strict';\n\nvar PLUGIN_NAME = 'VueNotifications';\nvar PACKAGE_NAME = 'vue-notifications';\nvar PROPERTY_NAME = 'notifications';\n\nvar TYPE = {\n  error: 'error',\n  warn: 'warn',\n  info: 'info',\n  success: 'success'\n};\n\nvar VUE_VERSION = {\n  evangelion: 1,\n  ghostInTheShell: 2\n};\n\nvar MESSAGES = {\n  alreadyInstalled: PLUGIN_NAME + ': plugin already installed',\n  methodNameConflict: PLUGIN_NAME + ': names conflict - '\n};\n\nvar innerMethods = {\n  /**\n   * @param  {Object} Vue\n   * @return {Object}\n   */\n  getVersion: function getVersion(Vue) {\n    var version = Vue.version.match(/(\\d+)/g);\n    return {\n      major: +version[0],\n      regular: +version[1],\n      minor: +version[2]\n    };\n  },\n\n\n  /**\n   * @param  {String} msg\n   * @param  {String} type\n   * @param  {Object} types\n   */\n  showInConsole: function showInConsole(msg, type, types) {\n    if (type === types.error) console.error(msg);else if (type === types.warn) console.warn(msg);else if (type === types.success) console.info(msg);else console.log(msg);\n  },\n\n\n  /**\n   * @param  {String} type\n   * @param  {String} message\n   * @param  {String} title\n   * @param  {String} debugMsg\n   * @param  {Object} vueApp\n   * @return  {String}\n   */\n  showDefaultMessage: function showDefaultMessage(_ref, vueApp) {\n    var type = _ref.type,\n        message = _ref.message,\n        title = _ref.title,\n        debugMsg = _ref.debugMsg;\n\n    var msg = 'Title: ' + title + ', Message: ' + message + ', DebugMsg: ' + debugMsg + ', type: ' + type;\n\n    innerMethods.showInConsole(msg, type, TYPE);\n\n    return msg;\n  },\n\n  /**\n   * @param  {Object} elem\n   * @param  {String} className\n   */\n  addClass: function addClass(elem, className) {\n    if (elem.classList) {\n      elem.classList.add(className);\n    } else {\n      elem.className += ' ' + className;\n    }\n  },\n\n  /**\n   * @param  {Object} elem\n   * @param  {String} className\n   */\n  removeClass: function removeClass(elem, className) {\n    if (elem.classList) {\n      elem.classList.remove(className);\n    } else {\n      elem.className = elem.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n    }\n  },\n\n  /**\n   * @param  {Object} elem\n   * @param  {String} className\n   * @return {Boolean}\n   */\n  hasClass: function hasClass(elem, className) {\n    if (elem.classList) {\n      return elem.classList.contains(className);\n    } else {\n      return new RegExp('(^| )' + className + '( |$)', 'gi').test(elem.className);\n    }\n  },\n\n  /**\n   * @param  {Object} elem\n   * @param  {String} message\n   * @param  {String} inClass\n   * @param  {String} outClass\n   */\n  showInlineFn: function showInlineFn(elem, message, _ref2) {\n    var inClass = _ref2.inClass,\n        outClass = _ref2.outClass;\n\n    elem.innerText = message;\n    if (inClass) {\n      if (!innerMethods.hasClass(elem, inClass)) innerMethods.addClass(elem, inClass);\n    }\n\n    if (outClass) {\n      if (innerMethods.hasClass(elem, outClass)) innerMethods.removeClass(elem, outClass);\n    }\n  },\n\n  /**\n   * @param  {Object} elem\n   * @param  {String} inClass\n   * @param  {String} outClass\n   */\n  clearInlineFn: function clearInlineFn(elem, _ref3) {\n    var inClass = _ref3.inClass,\n        outClass = _ref3.outClass;\n\n    if (inClass) {\n      if (innerMethods.hasClass(elem, inClass)) innerMethods.removeClass(elem, inClass);\n    }\n\n    if (outClass) {\n      if (!innerMethods.hasClass(elem, outClass)) innerMethods.addClass(elem, outClass);\n    }\n\n    elem.innerText = '';\n  },\n\n  /**\n   * @param  {String} id\n   * @param  {String} type\n   * @param  {String} timeout\n   * @param  {String} message\n   * @param  {Object} classes\n   * @param  {Function} watch\n   * @param  {String} debugMsg\n   * @param  {Function} cb\n   * @param  {Object} vueApp\n   * @return  {String}\n   */\n  showInlineMessage: function showInlineMessage(_ref4, vueApp) {\n    var id = _ref4.id,\n        type = _ref4.type,\n        timeout = _ref4.timeout,\n        message = _ref4.message,\n        _ref4$classes = _ref4.classes,\n        classes = _ref4$classes === undefined ? {} : _ref4$classes,\n        watch = _ref4.watch,\n        debugMsg = _ref4.debugMsg,\n        cb = _ref4.cb;\n\n    // TODO (S.Panfilov) handle class add and remove here\n    if (debugMsg) innerMethods.showInConsole(debugMsg, type, TYPE);\n    var elem = document.getElementById(id);\n\n    innerMethods.showInlineFn(elem, message, classes);\n\n    if (timeout && !watch) {\n      setTimeout(function () {\n        innerMethods.clearInlineFn.call(vueApp, elem, classes);\n      }, timeout);\n    } else {\n      (function () {\n        var interval = setInterval(function () {\n          if (watch && !watch()) {\n            clearInterval(interval);\n            innerMethods.clearInlineFn.call(innerMethods, elem, classes);\n          }\n        }, 50);\n      })();\n    }\n\n    // TODO (S.Panfilov) BUG: Weird behaviour: cb calls 2 times\n    if (cb) {\n      // TODO (S.Panfilov) bug here\n      cb.call(vueApp, elem, function () {\n        return innerMethods.clearInlineFn.call(innerMethods, elem, classes);\n      });\n    }\n\n    return message;\n  },\n\n\n  /**\n   * @param  {Object} vueApp\n   * @param  {Object} config\n   * @return {Object}\n   */\n  getValues: function getValues(vueApp, config) {\n    var result = {};\n\n    var keepFnFields = ['cb', 'watch'];\n\n    Object.keys(config).forEach(function (field) {\n\n      keepFnFields.forEach(function (fnField) {\n        if (field === fnField) {\n          result[field] = config[field].bind(vueApp);\n        } else {\n          result[field] = typeof config[field] === 'function' ? config[field].call(vueApp) : config[field];\n        }\n      });\n    });\n\n    return result;\n  },\n\n\n  /**\n   * @param  {Object} config\n   * @param  {Object} options\n   * @param  {Object} vueApp\n   */\n  showMessage: function showMessage(config, options, vueApp) {\n    var valuesObj = innerMethods.getValues(vueApp, config);\n    var isLinkedToElem = !!valuesObj.id;\n\n    if (isLinkedToElem) {\n      innerMethods.showInlineMessage(valuesObj, vueApp);\n    } else {\n      var isMethodOverridden = options && options[valuesObj.type];\n      var method = isMethodOverridden ? options[valuesObj.type] : innerMethods.showDefaultMessage;\n      method(valuesObj, vueApp);\n    }\n\n    if (config.cb) return config.cb();\n  },\n\n\n  /**\n   * @param {Object} targetObj\n   * @param {Object} typesObj\n   * @param {Object} options\n   * @return {undefined}\n   * */\n  addMethods: function addMethods(targetObj, typesObj, options) {\n    Object.keys(typesObj).forEach(function (v) {\n      targetObj[typesObj[v]] = function (config) {\n        config.type = typesObj[v];\n        // TODO (S.Panfilov)fix 'vueApp' in param\n        return innerMethods.showMessage(config, options);\n      };\n    });\n  },\n\n\n  /**\n   * @param  {Object} vueApp\n   * @param  {String} name\n   * @param  {Object} options\n   * @param  {Object} pluginOptions\n   */\n  setMethod: function setMethod(vueApp, name, options, pluginOptions) {\n    if (!options.methods) options.methods = {};\n\n    if (options.methods[name]) {\n      // TODO (S.Panfilov) not sure - throw error here or just warn\n      console.error(MESSAGES.methodNameConflict + name);\n    } else {\n      options.methods[name] = innerMethods.makeMethod(vueApp, name, options, pluginOptions);\n    }\n  },\n\n\n  /**\n   * @param  {Object} vueApp\n   * @param  {String} configName\n   * @param  {Object} options\n   * @param  {Object} pluginOptions\n   * @return {Function}\n   */\n  makeMethod: function makeMethod(vueApp, configName, options, pluginOptions) {\n    return function (config) {\n      var newConfig = {};\n      Object.assign(newConfig, VueNotifications.config);\n      Object.assign(newConfig, options[VueNotifications.propertyName][configName]);\n      Object.assign(newConfig, config);\n\n      return innerMethods.showMessage(newConfig, pluginOptions, vueApp);\n    };\n  },\n\n  /**\n   * @param  {Object} vueApp\n   * @param  {Object} notifications\n   * @param  {Object} pluginOptions\n   */\n  initVueNotificationPlugin: function initVueNotificationPlugin(vueApp, notifications, pluginOptions) {\n    if (!notifications) return;\n    Object.keys(notifications).forEach(function (name) {\n      innerMethods.setMethod(vueApp, name, vueApp.$options, pluginOptions);\n    });\n\n    vueApp.$emit(PACKAGE_NAME + '-initiated');\n  }\n};\n\nvar VueNotifications = {\n  type: TYPE,\n  propertyName: PROPERTY_NAME,\n  config: {\n    type: TYPE.info,\n    timeout: 3000\n  },\n  installed: false,\n  /**\n   * Plugin | vue-notifications\n   * @param  {Function} Vue\n   * @param  {Object} pluginOptions\n   * @this VueNotifications\n   */\n  install: function install(Vue) {\n    var pluginOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var mixin = {};\n    var hook = void 0;\n\n    if (this.installed) throw console.error(MESSAGES.alreadyInstalled);\n    if (innerMethods.getVersion(Vue).major === VUE_VERSION.evangelion) hook = 'init';\n    if (innerMethods.getVersion(Vue).major === VUE_VERSION.ghostInTheShell) hook = 'beforeCreate';\n\n    mixin[hook] = function () {\n      var vueApp = this;\n      var vueAppOptions = this.$options;\n      var notificationsField = vueAppOptions[VueNotifications.propertyName];\n\n      innerMethods.initVueNotificationPlugin(vueApp, notificationsField, pluginOptions);\n    };\n\n    Vue.mixin(mixin);\n    innerMethods.addMethods(this, this.type, pluginOptions);\n\n    this.installed = true;\n  }\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(VueNotifications);\n}\nreturn VueNotifications;\n}));\n"]}