{"version":3,"sources":["vue-notifications.es5.js"],"names":["root","factory","define","amd","exports","module","VueNotifications","this","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","getMajorVersion","Vue","version","match","showInConsole","msg","type","types","error","console","warn","success","info","log","showDefaultMessage","_ref","message","title","debugMsg","TYPE","getValues","vueApp","config","result","keepFnFields","keys","forEach","field","fnField","bind","call","showMessage","options","valuesObj","cb","addMethods","targetObj","typesObj","v","setMethod","name","pluginOptions","methods","MESSAGES","methodNameConflict","makeMethod","configName","newConfig","assign","propertyName","initVueNotificationPlugin","notifications","$options","$emit","PACKAGE_NAME","unlinkVueNotificationPlugin","attachedMethods","undefined","makeMixin","_ref2","hooks","init","destroy","mounted","VUE_VERSION","eva","ghost","alreadyInstalled","PLUGIN_NAME","timeout","installed","install","arguments","length","mixin","window","use"],"mappings":"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","file":"vue-notifications.es5.min.js","sourcesContent":[";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.VueNotifications = factory();\n  }\n}(this, function() {\n'use strict';\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar PLUGIN_NAME = 'VueNotifications';\nvar PACKAGE_NAME = 'vue-notifications';\nvar PROPERTY_NAME = 'notifications';\n\nvar TYPE = {\n  error: 'error',\n  warn: 'warn',\n  info: 'info',\n  success: 'success'\n};\n\nvar VUE_VERSION = {\n  eva: 1,\n  ghost: 2\n};\n\nvar MESSAGES = {\n  alreadyInstalled: PLUGIN_NAME + ': plugin already installed',\n  methodNameConflict: PLUGIN_NAME + ': names conflict - '\n};\n\nfunction getMajorVersion(Vue) {\n  var version = Vue.version.match(/(\\d+)/g);\n  return +version[0];\n}\n\nfunction showInConsole(msg, type, types) {\n  if (type === types.error) console.error(msg);else if (type === types.warn) console.warn(msg);else if (type === types.success) console.info(msg);else console.log(msg);\n}\n\nfunction showDefaultMessage(_ref) {\n  var type = _ref.type,\n      message = _ref.message,\n      title = _ref.title,\n      debugMsg = _ref.debugMsg;\n\n  var msg = 'Title: ' + title + ' Message: ' + message + ' DebugMsg: ' + debugMsg + ' type: ' + type;\n\n  showInConsole(msg, type, TYPE);\n\n  return msg;\n}\nfunction getValues(vueApp, config) {\n  var result = {};\n  var keepFnFields = ['cb'];\n\n  Object.keys(config).forEach(function (field) {\n    keepFnFields.forEach(function (fnField) {\n      if (field === fnField) {\n        result[field] = config[field].bind(vueApp);\n      } else {\n        result[field] = typeof config[field] === 'function' ? config[field].call(vueApp) : config[field];\n      }\n    });\n  });\n\n  return result;\n}\n\nfunction showMessage(config, options, vueApp) {\n  var valuesObj = getValues(vueApp, config);\n  var isMethodOverridden = options && options[valuesObj.type];\n  var method = isMethodOverridden ? options[valuesObj.type] : showDefaultMessage;\n  method(valuesObj, vueApp);\n\n  if (config.cb) return config.cb();\n}\n\nfunction addMethods(targetObj, typesObj, options) {\n  Object.keys(typesObj).forEach(function (v) {\n    targetObj[typesObj[v]] = function (config) {\n      config.type = typesObj[v];\n      // TODO (S.Panfilov)fix 'vueApp' in param\n      return showMessage(config, options);\n    };\n  });\n}\n\nfunction setMethod(vueApp, name, options, pluginOptions) {\n  if (!options.methods) options.methods = {};\n\n  if (options.methods[name]) {\n    // TODO (S.Panfilov) not sure - throw error here or just warn\n    console.error(MESSAGES.methodNameConflict + name);\n  } else {\n    options.methods[name] = makeMethod(vueApp, name, options, pluginOptions);\n  }\n}\n\nfunction makeMethod(vueApp, configName, options, pluginOptions) {\n  return function (config) {\n    var newConfig = {};\n    Object.assign(newConfig, VueNotifications.config);\n    Object.assign(newConfig, options[VueNotifications.propertyName][configName]);\n    Object.assign(newConfig, config);\n\n    return showMessage(newConfig, pluginOptions, vueApp);\n  };\n}\nfunction initVueNotificationPlugin(vueApp, notifications, pluginOptions) {\n  if (!notifications) return;\n  Object.keys(notifications).forEach(function (name) {\n    setMethod(vueApp, name, vueApp.$options, pluginOptions);\n  });\n\n  vueApp.$emit(PACKAGE_NAME + '-initiated');\n}\nfunction unlinkVueNotificationPlugin(vueApp, notifications) {\n  if (!notifications) return;\n  var attachedMethods = vueApp.$options.methods;\n  Object.keys(notifications).forEach(function (name) {\n    if (attachedMethods[name]) {\n      attachedMethods[name] = undefined;\n      delete attachedMethods[name];\n    }\n  });\n\n  vueApp.$emit(PACKAGE_NAME + '-unlinked');\n}\n\nfunction makeMixin(Vue, pluginOptions) {\n  var _ref2;\n\n  var hooks = {\n    init: '',\n    destroy: 'beforeDestroy',\n    mounted: ''\n  };\n\n  if (getMajorVersion(Vue) === VUE_VERSION.eva) {\n    hooks.init = 'init';\n    hooks.mounted = 'compiled';\n  }\n  if (getMajorVersion(Vue) === VUE_VERSION.ghost) {\n    hooks.init = 'beforeCreate';\n    hooks.mounted = 'mounted';\n  }\n\n  return _ref2 = {}, _defineProperty(_ref2, hooks.init, function () {\n    var vueApp = this;\n    var vueAppOptions = this.$options;\n    var notificationsField = vueAppOptions[VueNotifications.propertyName];\n\n    initVueNotificationPlugin(vueApp, notificationsField, pluginOptions);\n  }), _defineProperty(_ref2, hooks.destroy, function () {\n    var vueApp = this;\n    var vueAppOptions = this.$options;\n    var notificationsField = vueAppOptions[VueNotifications.propertyName];\n    unlinkVueNotificationPlugin(vueApp, notificationsField);\n  }), _ref2;\n}\n\nvar VueNotifications = {\n  type: TYPE,\n  propertyName: PROPERTY_NAME,\n  config: {\n    type: TYPE.info,\n    timeout: 3000\n  },\n  installed: false,\n  /**\n   * Plugin | vue-notifications\n   * @param  {Function} Vue\n   * @param  {Object} pluginOptions\n   * @this VueNotifications\n   */\n  install: function install(Vue) {\n    var pluginOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (this.installed) throw console.error(MESSAGES.alreadyInstalled);\n    var mixin = makeMixin(Vue, pluginOptions);\n    Vue.mixin(mixin);\n\n    addMethods(this, this.type, pluginOptions);\n\n    this.installed = true;\n  }\n\n  //TODO (S.Panfilov) add ability to access this.notifications.someError.message\n  //TODO (S.Panfilov) add \"noCall:true\" property\n\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(VueNotifications);\n}\nreturn VueNotifications;\n}));\n"]}